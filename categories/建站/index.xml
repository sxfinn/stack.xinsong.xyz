<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>建站 on NcPhoton</title>
        <link>https://stack.xinsong.xyz/categories/%E5%BB%BA%E7%AB%99/</link>
        <description>Recent content in 建站 on NcPhoton</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 05 Dec 2022 16:46:59 +0000</lastBuildDate><atom:link href="https://stack.xinsong.xyz/categories/%E5%BB%BA%E7%AB%99/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>搭建hexo个人博客</title>
        <link>https://stack.xinsong.xyz/p/%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Mon, 05 Dec 2022 16:46:59 +0000</pubDate>
        
        <guid>https://stack.xinsong.xyz/p/%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212041604310.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221204160409091&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a class=&#34;link&#34; href=&#34;http://daringfireball.net/projects/markdown/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;安装hexo&#34;&gt;安装hexo&lt;/h2&gt;
&lt;p&gt;安装hexo之前需要安装Nodejs组件，这个在我的另一篇文章：&lt;/p&gt;
&lt;p&gt;Hexo是我们博客的框架，我们需要在我们的电脑里创建一个文件夹，可以命名为Blog，Hexo框架与你发布的博客网页以后都会在这个文件中。创建好后进入文件夹中，按住shift键，右键鼠标点击打开powershell窗口；&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;打开后&lt;/p&gt;
&lt;p&gt;使用npm命令安装Hexo，命令行窗口输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-g&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hexo-cli&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;等待一会儿即可，接着输入命令初始化我们的博客：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的两个命令都作用于我们刚刚创建的Blog文件夹。&lt;/p&gt;
&lt;p&gt;然后我们就可以看到我们的Blog/文件夹目录下会出现一个blog文件夹，接着我们进入blog文件夹；&lt;/p&gt;
&lt;p&gt;输入命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来我们来检测我们网站的雏形，依次输入以下命令；&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_my_site&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。&lt;/p&gt;
&lt;p&gt;在浏览器地址窗口输入：localhost:4000&lt;/p&gt;
&lt;p&gt;即可访问到我们本地的博客内容。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021411368.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141103878&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;未经修改过的博客页面应该是上面这个样子的，也可以看到我们刚刚创建的test_my_site这篇文章。&lt;/p&gt;
&lt;p&gt;这样就说明我们本地的博客页面是正常的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现在来介绍常用的Hexo 命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;npm install hexo -g #安装Hexo
npm update hexo -g #升级
hexo init #初始化博客&lt;/p&gt;
&lt;p&gt;命令简写
hexo n &amp;ldquo;我的博客&amp;rdquo; == hexo new &amp;ldquo;我的博客&amp;rdquo; #新建文章
hexo g == hexo generate #生成
hexo s == hexo server #启动服务预览
hexo d == hexo deploy #部署&lt;/p&gt;
&lt;p&gt;hexo server #Hexo会监视文件变动并自动更新，无须重启服务器
hexo server -s #静态模式
hexo server -p 5000 #更改端口
hexo server -i 192.168.1.1 #自定义 IP
hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;推送网站&#34;&gt;推送网站&lt;/h2&gt;
&lt;p&gt;刚刚我们看到的只是我们本地的预览，别人并无法访问，接下来要做的就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。&lt;/p&gt;
&lt;h3 id=&#34;创建github仓库&#34;&gt;创建Github仓库&lt;/h3&gt;
&lt;p&gt;进入Github网页创建一个新仓库，点击&lt;strong&gt;New repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;仓库名为固定格式： &lt;strong&gt;Github用户名.github.io&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如我的sxfinn.github.io&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021411979.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141136705&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们使用 ssh 免密部署，这种方式可以避免输密码的繁琐，并且速度也是最快的。&lt;/p&gt;
&lt;h3 id=&#34;创建密钥对&#34;&gt;创建密钥对&lt;/h3&gt;
&lt;p&gt;为了方便运行 GitHub Actions 时登录 GitHub 账号，我们使用 SSH 方式登录。就是要把设备的私钥交给 GitHub Actions，公钥交给 GitHub，需要去 Settings 里去配置。&lt;/p&gt;
&lt;p&gt;进入git bash&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;ssh-keygen&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rsa&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-C&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Github的邮箱地址&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 例如 ssh-keygen -t rsa -C &amp;#34;123123123@gmail.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;代码参数含义：&lt;/p&gt;
&lt;p&gt;-t 指定密钥类型，默认是 rsa ，可以省略。
-C 设置注释文字，比如邮箱。
-f 指定密钥文件存储文件名。&lt;/p&gt;
&lt;p&gt;输入后接着按三个回车&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@localhost&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;~]&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# ssh-keygen -t rsa       &amp;lt;== 建立密钥对，-t代表类型，有RSA和DSA两种&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Generating&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rsa&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id_rsa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;&amp;lt;==&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;密钥文件默认存放位置，按&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Created&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/root/.ssh&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;passphrase&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;passphrase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;输入密钥锁码，或直接按&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;留空&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;same&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;passphrase&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;再输入一遍密钥锁码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Your&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;identification&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;has&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;been&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saved&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id_rsa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;生成的私钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Your&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;has&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;been&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saved&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id_rsa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;pub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;生成的公钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fingerprint&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;SHA256&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;K1qy928tkk1FUuzQtlZK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;poeS67vIgPvHw9lQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KNuZ4&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@localhost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;localdomain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randomart&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;+---[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;RSA 2048&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]----+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;p&#34;&gt;+.&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;O&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=+&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;=...&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;oo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;+----[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;SHA256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]-----+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;密钥对生成后默认的位置是用户文件。以 windows 为例：密钥对文件在 &lt;code&gt;C:\Users\用户名&lt;/code&gt;里，其中 Users 可能因为系统原因显示的是&lt;code&gt;用户&lt;/code&gt;。这个文件夹里会有一个&lt;code&gt;.ssh&lt;/code&gt; 的目录，这个里面就是我们的密钥对。&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;id_rsa&lt;/code&gt; 是私钥，&lt;code&gt;id_rsa.pub&lt;/code&gt; 是公钥。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github 网站–&amp;gt;Settings–&amp;gt;SSH and GPG keys&lt;/p&gt;
&lt;p&gt;新增一个公钥点击 Add SSH key，然后把 &lt;code&gt;id_rsa.pub&lt;/code&gt; 这个文件用文本文档打开，将内容复制进去。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用下面的命令测试是否成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;出现如下信息则说明添加成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021412201.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141205160&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置部署信息&#34;&gt;配置部署信息&lt;/h3&gt;
&lt;p&gt;在配置之前我们要解释一个概念，在blog根目录里的&lt;code&gt;_config.yml&lt;/code&gt;文件称为&lt;strong&gt;站点配置文件&lt;/strong&gt;，之后我们对博客配置的修改都是通过此文件来进行的。&lt;/p&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021412263.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141221129&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现在我们要做的就是将Hexo与Github关联起来，打开站点的配置文件&lt;code&gt;_config.yml&lt;/code&gt;，下拉到最后修改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;你的地址&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：repo一行中“你的地址”，即为你刚刚创建的&lt;strong&gt;GitHub仓库&lt;/strong&gt;的ssh链接。&lt;/p&gt;
&lt;p&gt;例如我的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021412052.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141236779&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;保存站点配置文件。&lt;/p&gt;
&lt;p&gt;我们刚刚配置的文件其实就是在我们执行推送到远端这个hexo d这个命令时，让hexo知道该推送到哪里去，很显然我们部署在我们的GitHub仓库里。&lt;/p&gt;
&lt;p&gt;安装Git部署插件，输入命令：（仍然是Blog/blog 目录下）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hexo-deployer&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-git&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-save&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一定要记得执行此命令否则无法自动部署。&lt;/p&gt;
&lt;p&gt;这时我们输入三条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即你刚刚创建的仓库名。&lt;/p&gt;
&lt;p&gt;你就会发现你的博客已经上线了，可以在网络上被访问了，这与你在本地预览的博客内容是一样的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021412022.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141256423&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;绑定域名&#34;&gt;绑定域名&lt;/h2&gt;
&lt;p&gt;虽然在网络上已经可以访问到我们的网站了，但我们大多数人都还是想使用自己的个性域名来访问网站的，这就需要绑定我们的域名。接下来我将演示阿里云域名绑定。其他厂商区别也都不大，可以作为参照。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录到阿里云，进入域名控制台点击解析；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021413117.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141323042&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加解析记录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;方案一（建议）：如果是想用主域名和www的域名访问站点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要添加两个解析记录：&lt;/p&gt;
&lt;p&gt;第一个解析记录的记录类型为A，主机记录为@，记录值为ping 你的github用户名.github.io的ip地址，填入为下列 IP 中的至少一个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;185.199.108.153&lt;/li&gt;
&lt;li&gt;185.199.109.153&lt;/li&gt;
&lt;li&gt;185.199.110.153&lt;/li&gt;
&lt;li&gt;185.199.111.153&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二个解析记录的记录类型为CNAME，主机记录为www，记录值为你的新建的仓库名——你的github用户名.github.io&lt;/p&gt;
&lt;p&gt;注意：这里直接添加两个CNAME一个类型为@另一个为www都指向 你的github用户名.github.io 也可以的（但主机记录为@的域名添加CNAME记录值可能会有与其他服务，例如电子邮件的冲突问题，因此不建议）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案二：如果是想使用单独的一个二级域名（包括www域）如blog域名访问站点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Custom domain填入相应域名再添加一个解析记录，记录类型为CNAME，指向 你的github用户名.github.io 即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案三：如果是单独的只想使用主域名访问站点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;添加解析记录的记录类型为A，主机记录为@，记录值为ping 你的github用户名.github.io的ip地址，填入为下列 IP 中的一个至少一个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;185.199.108.153&lt;/li&gt;
&lt;li&gt;185.199.109.153&lt;/li&gt;
&lt;li&gt;185.199.110.153&lt;/li&gt;
&lt;li&gt;185.199.111.153&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;page的自动双重定向&#34;&gt;Page的自动双重定向&lt;/h3&gt;
&lt;p&gt;如下图添加了我们填写的Custom domain的解析记录会报错：&lt;strong&gt;DNS valid  for primary&lt;/strong&gt;，并且提示我们www域名未正确配置，这是为何？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021413007.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141334840&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;带着些历史原因，通常我们的印象中www域名和主域名是访问同一个站点的，大部分网站都这个机制，包括Github Page。&lt;/p&gt;
&lt;p&gt;这段时间搞了几种框架的网站建设了，我发现不是域名指向站点的 IP 就能访问站点。&lt;/p&gt;
&lt;p&gt;以typecho搭建的网站为例，即使一个域名指向了我们的 IP ，但如果我们的站点中没有保存这个域名的信息，也就是没有添加此域名作为访问站点的域名，那么这个域名仍然无法访问我们的站点，也就是说访问站点时是有域名认证的~，能解析到我的 IP 和站点还不行，我的站点还必须认证了此域名。&lt;/p&gt;
&lt;p&gt;利用GitHub page部署网站也有一个这个问题，那就是page的 IP 就那么4个，是如何能够访问我们的站点而不是其他人的站点呢？实际上GitHub是根据我们提交的CNAME去确定我们的站点的，CNAME的值会去填充Custom domain，而这个Custom domain会和我们的站点形成一种绑定关系，我们只有使用这个Custom domain才能正确访问站点。&lt;/p&gt;
&lt;p&gt;既然只能通过这一个Custom domain来访问站点，那么Github Page是怎么实现的www域名和主域名都能访问站点这样的机制呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原因是Github Page提供了双重定向的机制&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;GitHub Page推荐我们通过DNS提供商在配置一个主域名同时配置一个 &lt;code&gt;www&lt;/code&gt; 子域名，这样主域名和www的域名都可以访问站点&lt;/p&gt;
&lt;p&gt;如果您通过 DNS 提供商正确配置一个&lt;a class=&#34;link&#34; href=&#34;https://doc.yonyoucloud.com/doc/wiki/project/github-pages-basics/custom-domains.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;顶级域名&lt;/a&gt;（例如 &lt;code&gt;example.com&lt;/code&gt; ）和一个匹配的 &lt;code&gt;www&lt;/code&gt; 子域名（例如 &lt;code&gt;www.example.com&lt;/code&gt; ），GitHub 服务器会自动地创建双重定向。&lt;/p&gt;
&lt;p&gt;正确配置这两个域名后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你的 &lt;code&gt;CNAME&lt;/code&gt; 文件为 &lt;code&gt;example.com&lt;/code&gt;，那么 &lt;code&gt;www.example.com&lt;/code&gt; 会定向到 &lt;code&gt;example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果你的 &lt;code&gt;CNAME&lt;/code&gt; 文件为 &lt;code&gt;www.example.com&lt;/code&gt;，那么 &lt;code&gt;example.com&lt;/code&gt; 会定向到 &lt;code&gt;www.example.com&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然只能填写一个Custom domain，&lt;strong&gt;也只能通过此Custom domain访问站点&lt;/strong&gt;，但是通过DNS提供商对www域名和主域名DNS的正确配置GitHub Page会为我们自动创建双重定向，可以让 非Custom domain：&lt;strong&gt;www域 和主域&lt;/strong&gt;其中一个 重定向到Custom domain，从而能够达到www域名和主域名都能访问站点的效果。而如果使用其他子域名（非www），则只能使用这一个子域名访问站点。自动重定向仅适用于&lt;code&gt;www&lt;/code&gt;子域和其主域名之间，不适用于任何其他子域。&lt;/p&gt;
&lt;p&gt;例如，如果您将&lt;code&gt;www.example.com&lt;/code&gt;站点配置为自定义域，并且为主域和&lt;code&gt;www&lt;/code&gt;域设置了 GitHub Pages DNS 记录，&lt;code&gt;example.com&lt;/code&gt;则将&lt;strong&gt;重定向&lt;/strong&gt;到&lt;code&gt;www.example.com&lt;/code&gt;,如果您将&lt;code&gt;example.com&lt;/code&gt;站点配置为自定义域，并且为主域和&lt;code&gt;www&lt;/code&gt;域设置了 GitHub Pages DNS 记录，&lt;code&gt;www.example.com&lt;/code&gt;则将&lt;strong&gt;重定向&lt;/strong&gt;到&lt;code&gt;example.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;正是由于Page支持这样的机制，GitHub Page在我们Custom domain设置为 主域名或者www域名时，&lt;strong&gt;会主动检测&lt;/strong&gt;DNS提供方是否将主域名和www域名都正确配置了（即使我们并不想使用重定向机制），像上图这样只添加了我们填写的Custom domain的这一条&lt;code&gt;xinsong.xyz&lt;/code&gt;的解析记录，会提示我们：&lt;strong&gt;DNS valid for primary&lt;/strong&gt;，www.xinsong.xyz就不能正确访问我们的站点，只能通过xinsong.xyz去访问。而如果这里的Custom domain是www.xinsong.xyz，并且也只添加了www的解析记录，那么这里也会提示：&lt;strong&gt;DNS valid for primary&lt;/strong&gt;，并且报错：xinsong.xyz配置错误，也只能通过www.xinsong.xyz访问站点。如果不想看到Page报错和提示或者想使用双重定向机制，那么按照上面的&lt;strong&gt;方案一&lt;/strong&gt;做就能正确配置不会报错了。&lt;/p&gt;
&lt;p&gt;因此提示 DNS valid for primary 是Github Page主动检查是否满足重定向机制的结果，一旦提示我们DNS valid for primary，说明未能创建双重定向，只有使用当前的Custom domain才能访问我们的站点。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;登录GitHub，进入之前创建的仓库，点击setting，设置Custom domain，输入你的域名。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxfinn/CDN/img/202212021413328.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202141347251&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就通过我们的个性化域名来访问我们自己的网站了。&lt;/p&gt;
&lt;p&gt;但是这样做每次推送到远端时这个&lt;strong&gt;Custom domain&lt;/strong&gt;都会被覆盖，需要重新输入，因此还需要做如下操作：&lt;/p&gt;
&lt;p&gt;进入Blog/blog/source目录下，创建一个记事本文件，输入GitHub Page页面的Custom domain。这里建议是带www的域名。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;保存即可，命名为&lt;strong&gt;CNAME&lt;/strong&gt;，注意保存类型选择&lt;strong&gt;所有文件&lt;/strong&gt;而不是&lt;strong&gt;文本文件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这样我们每次推送到远端时就可以保证我们始终都能使用此域名进行访问。&lt;/p&gt;
&lt;p&gt;然后再进入blog文件中打卡powershell，依次执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hexo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这时候无论怎么折腾，我们在浏览器中输入我们的域名，就可以访问我们的网站了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;最终&#34;&gt;最终&lt;/h2&gt;
&lt;p&gt;GitHub Page推荐我们在配置一个主域名的同时配置一个 &lt;code&gt;www&lt;/code&gt; 子域名。&lt;/p&gt;
&lt;p&gt;如果您通过 DNS 提供商正确配置一个&lt;a class=&#34;link&#34; href=&#34;https://doc.yonyoucloud.com/doc/wiki/project/github-pages-basics/custom-domains.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;顶级域名&lt;/a&gt;（例如 &lt;code&gt;example.com&lt;/code&gt; ）和一个匹配的 &lt;code&gt;www&lt;/code&gt; 子域名（例如 &lt;code&gt;www.example.com&lt;/code&gt; ），GitHub 服务器会自动地创建双重定向。&lt;/p&gt;
&lt;p&gt;正确配置这两个域名后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你的 &lt;code&gt;CNAME&lt;/code&gt; 文件为 &lt;code&gt;example.com&lt;/code&gt;，那么 &lt;code&gt;www.example.com&lt;/code&gt; 会定向到 &lt;code&gt;example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果你的 &lt;code&gt;CNAME&lt;/code&gt; 文件为 &lt;code&gt;www.example.com&lt;/code&gt;，那么 &lt;code&gt;example.com&lt;/code&gt; 会定向到 &lt;code&gt;www.example.com&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：不要在你的 DNS 提供商上为你的自定义主域名创建一个 &lt;code&gt;CNAME&lt;/code&gt; 记录！这样做可能会导致与其他服务，如电子邮件等，在该域的问题。&lt;/p&gt;
&lt;p&gt;所以根据GitHub Page的&lt;strong&gt;官方说明&lt;/strong&gt;，总结下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用子域名时（非www域），建议在DNS提供商上为该子域名创建一个 &lt;code&gt;CNAME&lt;/code&gt; 记录，那么只能通过此子域去访问站点&lt;/li&gt;
&lt;li&gt;单独使用主域名时（不配置www域），建议在DNS提供商上为该主域名创建一个 &lt;code&gt;A&lt;/code&gt; 记录（CNAME可行，但不建议，可能发生电子邮件及其他服务的冲突问题），那么只能通过此主域访问站点&lt;/li&gt;
&lt;li&gt;使用www/主域名时，建议在DNS提供商上为该主域名创建一个 &lt;code&gt;A&lt;/code&gt; 记录，在DNS提供商上为该www域名创建一个 &lt;code&gt;CNAME&lt;/code&gt; 记录即可自动创建双重定向（定向到我们CNAME文件中的地址，无论CNAME文件为 &lt;code&gt;www.example.com&lt;/code&gt; 还是 &lt;code&gt;example.com&lt;/code&gt; ），使用www域和主域均可访问站点&lt;/li&gt;
&lt;li&gt;单独使用www域时，建议在DNS提供商上为该子域名创建一个 &lt;code&gt;CNAME&lt;/code&gt; 记录，那么只能通过此www域去访问站点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动重定向仅适用于&lt;code&gt;www&lt;/code&gt;子域和其主域名之间，不适用于任何其他子域。&lt;/p&gt;
&lt;p&gt;你可以使用除了 &lt;code&gt;www&lt;/code&gt; 以外的一个自定义子域名和一个自定义顶端域名来通过域名重定向（有时候也叫“域名转发”）。但是，请注意，这只能用于用户和组织的 Pages，而不是项目的 Pages。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.yonyoucloud.com/doc/wiki/project/github-pages-basics/tip-record.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在你的 DNS 提供者上配置 A 记录的技巧 - GitHub Pages 指南 - UDN开源文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/cn/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;管理 GitHub Pages 站点的自定义域 - GitHub Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
